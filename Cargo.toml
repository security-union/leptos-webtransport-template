[package]
name = "leptos-actix-webtransport-template"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
actix-files = { version = "0.6", optional = true }
actix-web = { version = "4", optional = true, features = ["macros"] }
anyhow = "1.0.75"
bytes = { version = "1.5.0", optional = true }
console_error_panic_hook = "0.1"
cfg-if = "1"
http = { version = "0.2", optional = true }
js-sys = "0.3.65"
leptos_meta = { version = "0.6.15", features = ["nightly"] }
leptos_actix = { version = "0.6.15", optional = true }
leptos_router = { version = "0.6.15", features = ["nightly"] }
leptos_webtransport = { git = "https://github.com/security-union/leptos-webtransport.git", branch = "update-websys" }
leptos-use = "0.13.6"
leptos = "0.6.15"
quinn = { version = "0.10.2", features = ["runtime-tokio", "tls-rustls", "ring"], optional = true }
rustls = { version = "0.21.2", features = ["dangerous_configuration"], optional = true }
rustls-native-certs = {version = "0.6.3", optional = true}
rustls-pemfile = {version = "1.0.3", optional = true}
sec-http3 = { version = "0.1.2", optional = true }
tokio = { version = "1.28.2", features = ["full"], optional = true }
tracing = {version = "0.1.37", optional = true}
tracing-subscriber = { version = "0.3.17", features = ["fmt", "ansi", "env-filter", "time", "tracing-log"], optional = true }
wasm-bindgen = "0.2.93"
actix-rt = { version = "2.9.0", optional = true }
wasm-bindgen-futures = "0.4"
rand = { version = "0.8.5", features = ["small_rng"] }


[dependencies.web-sys]
version = "0.3.64"
features = [
  "WebTransport",
  "WritableStream",
  "ReadableStream",
  "ReadableStreamDefaultReader",
  "ReadableStreamReadResult",
  "WebTransportSendStream",
  "WritableStreamDefaultWriter",
  "WebTransportDatagramDuplexStream",
  "WebTransportCloseInfo",
  "WebTransportBidirectionalStream",
  "WebTransportReceiveStream"
]

[features]
csr = [ "leptos_meta/csr", "leptos_router/csr"]
hydrate = [ "leptos_meta/hydrate", "leptos_router/hydrate"]
ssr = [
  "dep:actix-files",
  "dep:actix-rt",
  "dep:actix-web",
  "dep:bytes",
  "dep:http",
  "dep:leptos_actix",
  "dep:quinn",
  "dep:rustls",
  "dep:rustls-native-certs",
  "dep:rustls-pemfile",
  "dep:sec-http3",
  "dep:tokio",
  "dep:tracing",
  "dep:tracing-subscriber",

  "leptos_meta/ssr",
  "leptos_router/ssr",
]

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"
# Optional, Activates the tailwind build
tailwind-input-file = "style/tailwind.css"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
# style-file = "style/main.scss"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "assets"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false
